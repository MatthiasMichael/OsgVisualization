CMAKE_MINIMUM_REQUIRED(VERSION 3.10)

PROJECT( OsgCommonObjects_Test_Displayable )

FIND_PACKAGE( Qt5Core )
FIND_PACKAGE( Qt5Widgets )
FIND_PACKAGE( Qt5Gui )
FIND_PACKAGE( Qt5OpenGL )

INCLUDE_DIRECTORIES(
	../../../include
	../../common
	${UI_INCLUDE_DIR}
)

ADD_EXECUTABLE( ${PROJECT_NAME}
	../src/main.cpp
)

TARGET_LINK_LIBRARIES( ${PROJECT_NAME}
	Qt5::Core
	Qt5::Gui
	Qt5::OpenGL
	Qt5::Widgets
	Glu32
	Opengl32
	OsgVisualization
	CONAN_PKG::Parametrizable
	CONAN_PKG::Roi3DF
	CONAN_PKG::openscenegraph
)

CONAN_TARGET_LINK_LIBRARIES(${PROJECT_NAME})

SET_PROPERTY( TARGET ${PROJECT_NAME} PROPERTY FOLDER "Tests")

SET_PROPERTY( TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
SET_PROPERTY( TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD_REQUIRED ON)

GET_TARGET_PROPERTY(QMAKE_EXECUTABLE Qt5::qmake IMPORTED_LOCATION)
GET_FILENAME_COMPONENT(QT_BIN_DIR "${QMAKE_EXECUTABLE}" DIRECTORY)
FIND_PROGRAM(WINDEPLOYQT_EXECUTABLE windeployqt HINTS "${QT_BIN_DIR}")

ADD_CUSTOM_COMMAND(TARGET ${PROJECT_NAME} POST_BUILD
    COMMAND "${CMAKE_COMMAND}" -E
    env PATH="${_qt_bin_dir}" "${WINDEPLOYQT_EXECUTABLE}" "$<TARGET_FILE:${PROJECT_NAME}>" "--dir" "${CMAKE_CURRENT_BINARY_DIR}"
    COMMENT "Running windeployqt..."
)